{"ast":null,"code":"var _jsxFileName = \"/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport PlayerDeck from './playerDeck.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerGrid = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [currentMode, setCurrentMode] = useState('player');\n  const playerDeckRefArray = [useRef(), useRef(), useRef(), useRef()];\n  useImperativeHandle(ref, () => ({\n    changeCurrentMode: newMode => {\n      setCurrentMode(newMode);\n\n      for (let i = 0; i < playerDeckRefArray.length; i++) {\n        playerDeckRefArray[i].current.changeCurrentMode(newMode);\n      }\n    },\n    addToAvailableDeck: cardNum => {\n      for (let i = 0; i < playerDeckRefArray.length; i++) {\n        let hasSuccessfullyAdded = playerDeckRefArray[i].current.addCardToDeck(cardNum);\n        if (hasSuccessfullyAdded) return;\n      }\n    }\n  }));\n\n  const removeFromDeckAndMakeAvailable = cardNum => {\n    props.cardSelectorRef.current.removeCardFromPlayerUsedList(cardNum);\n  };\n\n  const getPlayerDeck = deckNum => {\n    return playerDeckRefArray[deckNum].current;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#3cd',\n      width: '336px'\n    },\n    className: \"roundSquare\",\n    children: [0, 1, 2, 3].map(n => /*#__PURE__*/_jsxDEV(PlayerDeck, {\n      ref: playerDeckRefArray[n],\n      deckNum: n,\n      funcUtils: {\n        'removeFromDeckAndMakeAvailable': removeFromDeckAndMakeAvailable,\n        'getPlayerDeck': getPlayerDeck\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}, \"v4FLL/6KUMBEFfdZA5MW89ruBLU=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = PlayerGrid;\nexport default PlayerGrid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayerGrid$forwardRef\");\n$RefreshReg$(_c2, \"PlayerGrid\");","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerGrid.js"],"names":["React","useState","useRef","forwardRef","useImperativeHandle","PlayerDeck","PlayerGrid","props","ref","currentMode","setCurrentMode","playerDeckRefArray","changeCurrentMode","newMode","i","length","current","addToAvailableDeck","cardNum","hasSuccessfullyAdded","addCardToDeck","removeFromDeckAndMakeAvailable","cardSelectorRef","removeCardFromPlayerUsedList","getPlayerDeck","deckNum","backgroundColor","width","map","n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,mBAA9C,QAAyE,OAAzE;AAEA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,UAAU,gBAAGH,UAAU,SAAC,CAACI,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAE7C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,QAAD,CAA9C;AAEA,QAAMU,kBAAkB,GAAG,CAACT,MAAM,EAAP,EAAWA,MAAM,EAAjB,EAAqBA,MAAM,EAA3B,EAA+BA,MAAM,EAArC,CAA3B;AAGAE,EAAAA,mBAAmB,CAACI,GAAD,EAAM,OAAO;AAC/BI,IAAAA,iBAAiB,EAAGC,OAAD,IAAa;AAC/BH,MAAAA,cAAc,CAACG,OAAD,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,kBAAkB,CAACI,MAAvC,EAA+CD,CAAC,EAAhD,EAAqD;AACpDH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsBE,OAAtB,CAA8BJ,iBAA9B,CAAgDC,OAAhD;AACA;AACD,KAN8B;AAQ/BI,IAAAA,kBAAkB,EAAGC,OAAD,IAAa;AAChC,WAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,kBAAkB,CAACI,MAAvC,EAA+CD,CAAC,EAAhD,EAAqD;AACpD,YAAIK,oBAAoB,GAAGR,kBAAkB,CAACG,CAAD,CAAlB,CAAsBE,OAAtB,CAA8BI,aAA9B,CAA4CF,OAA5C,CAA3B;AAEA,YAAIC,oBAAJ,EAA0B;AAC1B;AACD;AAd8B,GAAP,CAAN,CAAnB;;AAkBA,QAAME,8BAA8B,GAAIH,OAAD,IAAa;AACnDX,IAAAA,KAAK,CAACe,eAAN,CAAsBN,OAAtB,CAA8BO,4BAA9B,CAA2DL,OAA3D;AACA,GAFD;;AAIA,QAAMM,aAAa,GAAIC,OAAD,IAAa;AAClC,WAAOd,kBAAkB,CAACc,OAAD,CAAlB,CAA4BT,OAAnC;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAZ;AAAuD,IAAA,SAAS,EAAC,aAAjE;AAAA,cACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaC,GAAb,CAAiBC,CAAC,iBAAI,QAAC,UAAD;AAAY,MAAA,GAAG,EAAElB,kBAAkB,CAACkB,CAAD,CAAnC;AAAwC,MAAA,OAAO,EAAEA,CAAjD;AAAoD,MAAA,SAAS,EAAE;AAAC,0CAAkCR,8BAAnC;AAAmE,yBAAiBG;AAApF;AAA/D;AAAA;AAAA;AAAA;AAAA,YAAtB;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAvC4B;AAAA,UAO5BpB,mBAP4B;AAAA,GAA7B;MAAME,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\n\nimport PlayerDeck from './playerDeck.js';\n\nconst PlayerGrid = forwardRef((props, ref) => {\n\n\tconst [currentMode, setCurrentMode] = useState('player');\n\n\tconst playerDeckRefArray = [useRef(), useRef(), useRef(), useRef()];\n\t\n\n\tuseImperativeHandle(ref, () => ({\n\t\tchangeCurrentMode: (newMode) => {\n\t\t\tsetCurrentMode(newMode);\n\t\t\tfor (let i = 0; i < playerDeckRefArray.length; i ++) {\n\t\t\t\tplayerDeckRefArray[i].current.changeCurrentMode(newMode);\n\t\t\t}\n\t\t},\n\n\t\taddToAvailableDeck: (cardNum) => {\n\t\t\tfor (let i = 0; i < playerDeckRefArray.length; i ++) {\t\t\t\t\n\t\t\t\tlet hasSuccessfullyAdded = playerDeckRefArray[i].current.addCardToDeck(cardNum);\n\n\t\t\t\tif (hasSuccessfullyAdded) return;\n\t\t\t}\t\t\t\n\t\t},\n\t\t\n\t}));\n\n\tconst removeFromDeckAndMakeAvailable = (cardNum) => {\n\t\tprops.cardSelectorRef.current.removeCardFromPlayerUsedList(cardNum)\n\t}\n\n\tconst getPlayerDeck = (deckNum) => {\n\t\treturn playerDeckRefArray[deckNum].current;\n\t}\n\n\treturn(\n\t\t<div style={{backgroundColor: '#3cd', width: '336px'}} className=\"roundSquare\">\n\t\t\t{ [0, 1, 2, 3].map(n => <PlayerDeck ref={playerDeckRefArray[n]} deckNum={n} funcUtils={{'removeFromDeckAndMakeAvailable': removeFromDeckAndMakeAvailable, 'getPlayerDeck': getPlayerDeck}}/>) }\n\t\t</div>\n\t);\n\n});\n\nexport default PlayerGrid;"]},"metadata":{},"sourceType":"module"}