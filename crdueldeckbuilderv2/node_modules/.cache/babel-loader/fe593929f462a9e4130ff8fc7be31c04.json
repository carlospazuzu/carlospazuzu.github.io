{"ast":null,"code":"var _jsxFileName = \"/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/cardCollection.js\";\nimport React from 'react';\nimport cards from '../utils/card-data.js';\nimport SelectableCard from './selectableCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardCollection = props => {\n  const generateCollection = () => {\n    if (props.filter !== '') {\n      return cards['items'].map((c, i) => c.type === props.type ? /*#__PURE__*/_jsxDEV(SelectableCard, {\n        funcUtils: props.funcUtils,\n        position: i,\n        isBeingUsed: props.usedCardsList.includes(i),\n        isBanned: props.bannedCardsList.includes(i),\n        transparent: 'labels' in c && c.labels.split(', ').includes(props.filter) ? false : true\n      }, String(i) + '#card', false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 39\n      }, this) : '');\n    } else {\n      return cards['items'].map((c, i) => c.type === props.type ? /*#__PURE__*/_jsxDEV(SelectableCard, {\n        position: i,\n        funcUtils: props.funcUtils,\n        isBeingUsed: props.usedCardsList.includes(i),\n        isBanned: props.bannedCardsList.includes(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 64\n      }, this) : '');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.visible ? generateCollection() : ''\n  }, void 0, false);\n};\n\n_c = CardCollection;\nexport default CardCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCollection\");","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/cardCollection.js"],"names":["React","cards","SelectableCard","CardCollection","props","generateCollection","filter","map","c","i","type","funcUtils","usedCardsList","includes","bannedCardsList","labels","split","String","visible"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,cAAP,MAA2B,qBAA3B;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAEjC,QAAMC,kBAAkB,GAAG,MAAM;AAChC,QAAID,KAAK,CAACE,MAAN,KAAiB,EAArB,EAAyB;AACxB,aAAOL,KAAK,CAAC,OAAD,CAAL,CAAeM,GAAf,CACN,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,KAAWN,KAAK,CAACM,IAAjB,gBAAwB,QAAC,cAAD;AAA0C,QAAA,SAAS,EAAEN,KAAK,CAACO,SAA3D;AAAsE,QAAA,QAAQ,EAAEF,CAAhF;AAAmF,QAAA,WAAW,EAAEL,KAAK,CAACQ,aAAN,CAAoBC,QAApB,CAA6BJ,CAA7B,CAAhG;AAAiI,QAAA,QAAQ,EAAEL,KAAK,CAACU,eAAN,CAAsBD,QAAtB,CAA+BJ,CAA/B,CAA3I;AAA8K,QAAA,WAAW,EAAE,YAAYD,CAAZ,IAAiBA,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,IAAf,EAAqBH,QAArB,CAA8BT,KAAK,CAACE,MAApC,CAAjB,GAA+D,KAA/D,GAAuE;AAAlQ,SAAqBW,MAAM,CAACR,CAAD,CAAN,GAAY,OAAjC;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAqS,EADzS,CAAP;AAGA,KAJD,MAIO;AACN,aAAOR,KAAK,CAAC,OAAD,CAAL,CAAeM,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,KAAWN,KAAK,CAACM,IAAjB,gBAAwB,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAED,CAA1B;AAA6B,QAAA,SAAS,EAAEL,KAAK,CAACO,SAA9C;AAAyD,QAAA,WAAW,EAAEP,KAAK,CAACQ,aAAN,CAAoBC,QAApB,CAA6BJ,CAA7B,CAAtE;AAAuG,QAAA,QAAQ,EAAEL,KAAK,CAACU,eAAN,CAAsBD,QAAtB,CAA+BJ,CAA/B;AAAjH;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAiL,EAA9M,CAAP;AACA;AACD,GARD;;AAUA,sBACC;AAAA,cAEGL,KAAK,CAACc,OAAN,GAAgBb,kBAAkB,EAAlC,GAAuC;AAF1C,mBADD;AAQA,CApBD;;KAAMF,c;AAuBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\n\nimport cards from '../utils/card-data.js';\n\nimport SelectableCard from './selectableCard.js';\n\nconst CardCollection = (props) => {\n\n\tconst generateCollection = () => {\t\t\n\t\tif (props.filter !== '') {\n\t\t\treturn cards['items'].map(\n\t\t\t\t(c, i) => c.type === props.type ? <SelectableCard key={String(i) + '#card'} funcUtils={props.funcUtils} position={i} isBeingUsed={props.usedCardsList.includes(i)} isBanned={props.bannedCardsList.includes(i)} transparent={'labels' in c && c.labels.split(', ').includes(props.filter) ? false : true} /> : '' \n\t\t\t);\n\t\t} else {\n\t\t\treturn cards['items'].map((c, i) => c.type === props.type ? <SelectableCard position={i} funcUtils={props.funcUtils} isBeingUsed={props.usedCardsList.includes(i)} isBanned={props.bannedCardsList.includes(i)} /> : '' );\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\t\t\t\t\n\t\t\t{ /* cards['items'].map((c, i) => c.type === props.type ? <SelectableCard position={i} /> : '' ) */ }\n\t\t\t{ props.visible ? generateCollection() : '' }\t\t\t\n\n\t\t</>\n\t\n\t);\n}\n\n\nexport default CardCollection;"]},"metadata":{},"sourceType":"module"}