{"ast":null,"code":"import _toConsumableArray from\"/home/pazuzu/Documents/prog/react/tcc-pazuzu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/pazuzu/Documents/prog/react/tcc-pazuzu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,forwardRef,useImperativeHandle}from'react';import PlayerDeckCard from'./playerDeckCard.js';import deleteIcon from'../img/delete-icon.png';import deleteButton from'../img/delete-button.png';import copyIcon from'../img/copy-icon.png';import copyButton from'../img/copy-button.png';import elixirImg from'../img/elixir.png';import elixirCycleImg from'../img/elixir-cycle.png';import cycleImg from'../img/cycle.png';import cards from'../utils/card-data.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PlayerDeck=/*#__PURE__*/forwardRef(function(props,ref){var _useState=useState('player'),_useState2=_slicedToArray(_useState,2),currentMode=_useState2[0],setCurrentMode=_useState2[1];var baseArray=[0,1,2,3,4,5,6,7];var _useState3=useState([-1,-1,-1,-1,-1,-1,-1,-1]),_useState4=_slicedToArray(_useState3,2),deckCards=_useState4[0],setDeckCards=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),hasChampion=_useState6[0],setHasChampion=_useState6[1];var championIds=[26000069,26000072,26000074];var playerCardRefArray=[useRef(),useRef(),useRef(),useRef(),useRef(),useRef(),useRef(),useRef()];useImperativeHandle(ref,function(){return{changeCurrentMode:function changeCurrentMode(newMode){setCurrentMode(newMode);for(var i=0;i<playerCardRefArray.length;i++){playerCardRefArray[i].current.changeCurrentMode(newMode);}},addCardToDeck:function addCardToDeck(cardNum){var availablePosition=deckCards.indexOf(-1);if(hasChampion&&championIds.indexOf(cards['items'][cardNum]['id'])!==-1)return false;if(availablePosition!==-1){deckCards[availablePosition]=cardNum;setDeckCards(_toConsumableArray(deckCards));if(championIds.indexOf(cards['items'][cardNum]['id'])!==-1)setHasChampion(true);return true;}return false;},isDeckFull:function isDeckFull(){return deckCards.every(function(element){return element!==-1;});}};});var removeCardFromDeck=function removeCardFromDeck(cardNum){var cardPosition=deckCards.indexOf(cardNum);if(cardPosition===-1)return;// deckCards.splice(cardPosition, 1);\nif(championIds.indexOf(cards['items'][cardNum]['id'])!==-1)setHasChampion(false);deckCards[cardPosition]=-1;setDeckCards(_toConsumableArray(deckCards));props.funcUtils.removeFromDeckAndMakeAvailable(cardNum);};var getDeckCostArray=function getDeckCostArray(){var deckCostArray=[];for(var i=0;i<deckCards.length;i++){deckCostArray.push(cards['items'][deckCards[i]]['cost']);}return deckCostArray;};var getDeckCardsIDArray=function getDeckCardsIDArray(){var deckCardsIDArray=[];for(var i=0;i<deckCards.length;i++){deckCardsIDArray.push(cards['items'][deckCards[i]]['id']);}return deckCardsIDArray;};var isDeckFull=function isDeckFull(){return deckCards.every(function(element){return element!==-1;});};var getDeckAvgElixir=function getDeckAvgElixir(){var deckCostArray=getDeckCostArray();var reducer=function reducer(acc,cur){return acc+cur;};var result=deckCostArray.reduce(reducer);return(result/8).toFixed(1);};var getCycleCost=function getCycleCost(){var deckCostArray=getDeckCostArray();deckCostArray=deckCostArray.sort();return(deckCostArray[0]+deckCostArray[1]+deckCostArray[2]+deckCostArray[3]).toFixed(1);};var openOfficialDeckLink=function openOfficialDeckLink(){var deckCardsIDArray=getDeckCardsIDArray();var officialLink='https://link.clashroyale.com/deck/en?deck=';deckCardsIDArray.map(function(cardId,idx){return officialLink+=(idx!==0?';':'')+cardId;});window.open(officialLink);};var deleteDeck=function deleteDeck(){if(currentMode==='enemy')return;setHasChampion(false);deckCards.map(function(cardNum){return props.funcUtils.removeFromDeckAndMakeAvailable(cardNum);});setDeckCards([-1,-1,-1,-1,-1,-1,-1,-1]);};return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#79D9E3',height:'168px',margin:'15px',padding:'10px',textAlign:'center'},className:\"row roundSquare\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"eleven columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:[0,1,2,3].map(function(e){return/*#__PURE__*/_jsx(PlayerDeckCard,{ref:playerCardRefArray[e],position:deckCards[e],funcUtils:{'removeCardFromDeck':removeCardFromDeck}});})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:[4,5,6,7].map(function(e){return/*#__PURE__*/_jsx(PlayerDeckCard,{ref:playerCardRefArray[e],position:deckCards[e],funcUtils:{'removeCardFromDeck':removeCardFromDeck}});})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"one column\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",style:{'cursor':'pointer',height:'72px',marginBottom:'1px',marginLeft:'-30px'},onClick:isDeckFull()?openOfficialDeckLink:null,children:[\"      \",/*#__PURE__*/_jsx(\"img\",{style:{marginTop:'15px',width:'100%',filter:isDeckFull()?'':'grayscale(1.0)'},src:copyButton})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",style:{'cursor':'pointer',marginTop:'11px',marginLeft:'-30px'},onClick:isDeckFull()?deleteDeck:null,children:/*#__PURE__*/_jsx(\"img\",{style:{width:'100%',filter:!isDeckFull()||currentMode==='enemy'?'grayscale(1.0)':''},src:deleteButton})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"eleven columns\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"four columns\"}),/*#__PURE__*/_jsx(\"div\",{className:\"four columns\",style:{backgroundColor:'#3cd',borderRadius:'20px',marginLeft:'50px'},children:/*#__PURE__*/_jsxs(\"span\",{style:{float:'right',fontFamily:'Arial Black'},children:[/*#__PURE__*/_jsx(\"img\",{src:elixirImg,style:{width:'25%',float:'right'}}),/*#__PURE__*/_jsxs(\"span\",{style:{color:'#3E7ADE',float:'right'},children:[\" \",isDeckFull()?getDeckAvgElixir():'??',\" \"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"four columns\",style:{backgroundColor:'#3cd',borderRadius:'20px'},children:/*#__PURE__*/_jsxs(\"span\",{style:{float:'right',fontFamily:'Arial Black'},children:[/*#__PURE__*/_jsx(\"img\",{src:elixirCycleImg,style:{width:'30%',float:'left'}}),/*#__PURE__*/_jsxs(\"span\",{style:{color:'#3E7ADE',float:'left',marginLeft:'6px'},children:[\" \",isDeckFull()?getCycleCost():'??',\" \"]})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"one column\"})]})]});});export default PlayerDeck;","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerDeck.js"],"names":["React","useState","useRef","forwardRef","useImperativeHandle","PlayerDeckCard","deleteIcon","deleteButton","copyIcon","copyButton","elixirImg","elixirCycleImg","cycleImg","cards","PlayerDeck","props","ref","currentMode","setCurrentMode","baseArray","deckCards","setDeckCards","hasChampion","setHasChampion","championIds","playerCardRefArray","changeCurrentMode","newMode","i","length","current","addCardToDeck","cardNum","availablePosition","indexOf","isDeckFull","every","element","removeCardFromDeck","cardPosition","funcUtils","removeFromDeckAndMakeAvailable","getDeckCostArray","deckCostArray","push","getDeckCardsIDArray","deckCardsIDArray","getDeckAvgElixir","reducer","acc","cur","result","reduce","toFixed","getCycleCost","sort","openOfficialDeckLink","officialLink","map","cardId","idx","window","open","deleteDeck","backgroundColor","height","margin","padding","textAlign","e","marginBottom","marginLeft","marginTop","width","filter","borderRadius","float","fontFamily","color"],"mappings":"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","sourcesContent":["import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\n\nimport PlayerDeckCard from './playerDeckCard.js';\n\nimport deleteIcon from '../img/delete-icon.png';\nimport deleteButton from '../img/delete-button.png';\nimport copyIcon from '../img/copy-icon.png';\nimport copyButton from '../img/copy-button.png';\nimport elixirImg from '../img/elixir.png';\nimport elixirCycleImg from '../img/elixir-cycle.png';\nimport cycleImg from '../img/cycle.png';\n\nimport cards from '../utils/card-data.js';\n\nconst PlayerDeck = forwardRef((props, ref) => {\n\n\tconst [currentMode, setCurrentMode] = useState('player');\n\n\tconst baseArray = [0, 1, 2, 3, 4, 5, 6, 7];\t\n\tconst [deckCards, setDeckCards] = useState([-1, -1, -1, -1, -1, -1, -1, -1]);\n\tconst [hasChampion, setHasChampion] = useState(false);\n\tconst championIds = [26000069, 26000072, 26000074];\n\n\tconst playerCardRefArray = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef()];\n\n\tuseImperativeHandle(ref, () => ({\n\t\tchangeCurrentMode: (newMode) => {\n\t\t\tsetCurrentMode(newMode);\n\t\t\tfor (let i = 0; i < playerCardRefArray.length; i ++) {\n\t\t\t\tplayerCardRefArray[i].current.changeCurrentMode(newMode);\n\t\t\t}\t\t\t\n\t\t},\n\n\t\taddCardToDeck: (cardNum) => {\n\t\t\tlet availablePosition = deckCards.indexOf(-1);\n\n\t\t\tif (hasChampion && championIds.indexOf(cards['items'][cardNum]['id']) !== -1) return false;\n\n\t\t\tif (availablePosition !== -1) {\n\t\t\t\tdeckCards[availablePosition] = cardNum;\n\t\t\t\tsetDeckCards([...deckCards]);\n\t\t\t\tif (championIds.indexOf(cards['items'][cardNum]['id']) !== -1) setHasChampion(true);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\tisDeckFull: () => {\t\t\n\n\t\t\treturn deckCards.every(element => element !== -1);\n\t\t}\n\t\t\n\t}));\n\n\tconst removeCardFromDeck = (cardNum) => {\n\t\tlet cardPosition = deckCards.indexOf(cardNum);\n\n\t\tif (cardPosition === -1) return;\n\n\t\t// deckCards.splice(cardPosition, 1);\n\t\tif (championIds.indexOf(cards['items'][cardNum]['id']) !== -1) setHasChampion(false);\n\t\tdeckCards[cardPosition] = -1;\t\t\n\t\tsetDeckCards([...deckCards]);\n\t\tprops.funcUtils.removeFromDeckAndMakeAvailable(cardNum);\n\t}\n\n\tconst getDeckCostArray = () => {\n\n\t\tlet deckCostArray = [];\n\t\tfor (let i = 0; i < deckCards.length; i ++) {\n\t\t\tdeckCostArray.push(cards['items'][deckCards[i]]['cost'])\n\t\t}\n\n\t\treturn deckCostArray;\n\t}\n\n\tconst getDeckCardsIDArray = () => {\n\n\t\tlet deckCardsIDArray = [];\n\t\tfor (let i = 0; i < deckCards.length; i ++) {\n\t\t\tdeckCardsIDArray.push(cards['items'][deckCards[i]]['id'])\n\t\t}\n\n\t\treturn deckCardsIDArray;\n\t}\n\n\tconst isDeckFull = () => {\t\t\n\t\t\treturn deckCards.every(element => element !== -1);\n\t}\t\n\n\tconst getDeckAvgElixir = () => {\n\t\tlet deckCostArray = getDeckCostArray();\n\n\t\tconst reducer = (acc, cur) => acc + cur;\n\t\tlet result = deckCostArray.reduce(reducer);\n\n\t\treturn (result / 8).toFixed(1);\n\t}\n\n\tconst getCycleCost = () => {\n\t\tlet deckCostArray = getDeckCostArray();\n\n\t\tdeckCostArray = deckCostArray.sort();\n\n\t\treturn (deckCostArray[0] + deckCostArray[1] + deckCostArray[2] + deckCostArray[3]).toFixed(1);\n\t}\t\n\n\tconst openOfficialDeckLink = () => {\n\t\tlet deckCardsIDArray = getDeckCardsIDArray();\n\n\t\tlet officialLink = 'https://link.clashroyale.com/deck/en?deck='\n\n\t\tdeckCardsIDArray.map((cardId, idx) => officialLink += (idx !== 0 ? ';' : '') + cardId)\n\n\n\t\twindow.open(officialLink)\n\t}\n\n\tconst deleteDeck = () => {\n\t\tif (currentMode === 'enemy') return;\n\n\t\tsetHasChampion(false);\n\n\t\tdeckCards.map(cardNum => props.funcUtils.removeFromDeckAndMakeAvailable(cardNum))\n\t\tsetDeckCards([-1, -1, -1, -1, -1, -1, -1, -1]);\n\t}\n\n\treturn(\n\t\t<div style={{backgroundColor: '#79D9E3', height: '168px', margin: '15px', padding: '10px', textAlign: 'center'}} className=\"row roundSquare\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"eleven columns\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{ [0, 1, 2, 3].map(e => <PlayerDeckCard ref={playerCardRefArray[e]} position={deckCards[e]} funcUtils={{'removeCardFromDeck': removeCardFromDeck}}/>) }\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{ [4, 5, 6, 7].map(e => <PlayerDeckCard ref={playerCardRefArray[e]} position={deckCards[e]} funcUtils={{'removeCardFromDeck': removeCardFromDeck}}/>) }\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"one column\">\n\t\t\t\t\t<div className=\"row\" style={{'cursor': 'pointer', height: '72px', marginBottom: '1px', marginLeft: '-30px'}} onClick={isDeckFull() ? openOfficialDeckLink : null}>\t\t\t\t\t\t<img style={{marginTop: '15px', width: '100%', filter: isDeckFull() ? '' : 'grayscale(1.0)'}} src={copyButton} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\" style={{'cursor': 'pointer', marginTop: '11px', marginLeft: '-30px'}} onClick={isDeckFull() ? deleteDeck : null}>\n\t\t\t\t\t\t<img style={{width: '100%', filter: !isDeckFull() || currentMode === 'enemy' ? 'grayscale(1.0)' : ''}} src={deleteButton} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t</div>\t\t\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"eleven columns\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"four columns\" style={{backgroundColor: '#3cd', borderRadius: '20px', marginLeft: '50px'}}>\n\t\t\t\t\t\t\t<span style={{float: 'right', fontFamily: 'Arial Black'}}> \n\t\t\t\t\t\t\t\t<img src={elixirImg} style={{width: '25%', float: 'right'}}/> \n\t\t\t\t\t\t\t\t<span style={{color: '#3E7ADE', float: 'right'}}> { isDeckFull() ? getDeckAvgElixir() : '??'} </span> \n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"four columns\" style={{backgroundColor: '#3cd', borderRadius: '20px'}}>\n\t\t\t\t\t\t\t<span style={{float: 'right', fontFamily: 'Arial Black'}}> \n\t\t\t\t\t\t\t\t<img src={elixirCycleImg} style={{width: '30%', float: 'left'}}/> \n\t\t\t\t\t\t\t\t<span style={{color: '#3E7ADE', float: 'left', marginLeft: '6px'}}> { isDeckFull() ? getCycleCost() : '??'} </span> \n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"one column\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t</div>\n\t);\n});\n\nexport default PlayerDeck;"]},"metadata":{},"sourceType":"module"}