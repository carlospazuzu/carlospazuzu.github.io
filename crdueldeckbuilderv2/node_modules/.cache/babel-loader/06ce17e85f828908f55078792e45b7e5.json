{"ast":null,"code":"var _jsxFileName = \"/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport EnemyGrid from './components/enemyGrid.js';\nimport PlayerGrid from './components/playerGrid.js';\nimport CardSelector from './components/cardSelector.js';\nimport PlayerSelector from './components/playerSelector.js';\nimport appLogo from './img/app-logo.png';\nimport axios from 'axios';\nimport { firebaseDatabase } from './utils/firebaseUtils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const decksGridRef = /*#__PURE__*/React.createRef();\n  const cardsGridRef = /*#__PURE__*/React.createRef();\n  const cardSelectorRef = useRef();\n  const playerGridRef = useRef();\n  const enemyGridRef = useRef();\n  const [isEnemyGridHidden, setIsEnemyGridHidden] = useState(false);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const cornerStyle = {\n    width: 0,\n    height: 0,\n    borderTop: '100px solid rgb(42,221,119)',\n    borderLeft: '100px solid transparent',\n    position: 'absolute',\n    top: 0,\n    right: 0\n  };\n\n  const getProperDate = date => {\n    return String(date).length >= 2 ? date : '0' + String(date);\n  };\n\n  useEffect(() => {\n    axios.get('http://ip-api.com/json').then(res => {\n      const currentTime = new Date();\n      const year = String(currentTime.getFullYear());\n      const month = months[currentTime.getMonth()];\n      const day = getProperDate(currentTime.getDate());\n      let count = 0;\n      let countCountry = 0;\n      let currentCity = res.data.city;\n      firebaseDatabase.ref().child(year).child(month).child(day).child('visited_times').get().then(snapshot => {\n        if (snapshot.exists()) {\n          count = snapshot.val() + 1;\n        } else {\n          count = 1;\n        }\n\n        const newEntry = firebaseDatabase.ref().child(year).child(month).child(day).child('entries').push();\n        newEntry.set(res.data.city + ', ' + res.data.country + ', ' + res.data.countryCode + ', ' + currentTime.toLocaleTimeString());\n        firebaseDatabase.ref(year + '/' + month + '/' + day).update({\n          visited_times: count\n        });\n      });\n      firebaseDatabase.ref().child('countries').child(res.data.country).child('visited_times').get().then(snapshot => {\n        if (snapshot.exists()) {\n          countCountry = parseInt(snapshot.val()) + 1;\n        } else {\n          countCountry = 1;\n        }\n\n        firebaseDatabase.ref().child('countries').child(res.data.country).child('cities').get().then(snapshot => {\n          if (snapshot.exists()) {\n            if (snapshot.val().search(currentCity) === -1) {\n              let aux = snapshot.val();\n              aux += ', ' + currentCity;\n              currentCity = aux;\n            } else {\n              currentCity = snapshot.val();\n            }\n          }\n\n          firebaseDatabase.ref('countries').child(res.data.country).set({\n            visited_times: countCountry,\n            cities: currentCity,\n            country_code: res.data.countryCode\n          });\n        });\n      });\n    });\n  }, []);\n\n  const collapseEnemyGrid = () => {\n    enemyGridRef.current.style.width = '0%';\n    cardsGridRef.current.style.width = '58%';\n    decksGridRef.current.style.width = '38%';\n    setIsEnemyGridHidden(true);\n  };\n\n  const showEnemyGrid = () => {\n    enemyGridRef.current.style.width = '26%';\n    cardsGridRef.current.style.width = '44%';\n    decksGridRef.current.style.width = '26%';\n    setIsEnemyGridHidden(false);\n  };\n\n  const enemyGrid = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section sides left\",\n        children: /*#__PURE__*/_jsxDEV(PlayerGrid, {\n          ref: playerGridRef,\n          cardSelectorRef: cardSelectorRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: cardsGridRef,\n        className: \"section middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '50%'\n            },\n            src: appLogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardSelector, {\n          ref: cardSelectorRef,\n          playerGridRef: playerGridRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerSelector, {\n          cardSelectorRef: cardSelectorRef,\n          playerGridRef: playerGridRef,\n          enemyGridRef: enemyGridRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center',\n            fontSize: '13px',\n            color: '#555',\n            margin: '4px 4px 90px 4px'\n          },\n          children: [\"Programmed with \\uD83D\\uDC96 by \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://twitter.com/carlospazuzu\",\n            target: \"_blank\",\n            children: \"@carlospazuzu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 35\n          }, this), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 113\n          }, this), \"Compliments and Bug reports are appreciated.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 57\n          }, this), \"Learn how to use here: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://bit.ly/6GYh8Jn\",\n            target: \"_blank\",\n            style: {\n              color: '#d6457e'\n            },\n            children: \"https://bit.ly/6GYh8Jn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 36\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 139\n          }, this), \"If you find this tool useful, please consider \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.buymeacoffee.com/carlospazuzu\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\",\n              alt: \"Buy Me A Coffee\",\n              style: {\n                height: '60px !important',\n                width: '200px !important'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section sides\",\n        children: /*#__PURE__*/_jsxDEV(EnemyGrid, {\n          ref: enemyGridRef,\n          cardSelectorRef: cardSelectorRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"j2VvJiMsp3rKkAKw7Q7rnfVY5O8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/App.js"],"names":["React","useState","useRef","useEffect","EnemyGrid","PlayerGrid","CardSelector","PlayerSelector","appLogo","axios","firebaseDatabase","App","decksGridRef","createRef","cardsGridRef","cardSelectorRef","playerGridRef","enemyGridRef","isEnemyGridHidden","setIsEnemyGridHidden","months","cornerStyle","width","height","borderTop","borderLeft","position","top","right","getProperDate","date","String","length","get","then","res","currentTime","Date","year","getFullYear","month","getMonth","day","getDate","count","countCountry","currentCity","data","city","ref","child","snapshot","exists","val","newEntry","push","set","country","countryCode","toLocaleTimeString","update","visited_times","parseInt","search","aux","cities","country_code","collapseEnemyGrid","current","style","showEnemyGrid","enemyGrid","textAlign","fontSize","color","margin"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport EnemyGrid from './components/enemyGrid.js';\nimport PlayerGrid from './components/playerGrid.js';\n\nimport CardSelector from './components/cardSelector.js';\nimport PlayerSelector from './components/playerSelector.js';\n\nimport appLogo from './img/app-logo.png';\n\nimport axios from 'axios';\nimport { firebaseDatabase } from './utils/firebaseUtils.js';\n\nconst App = () => {\n\n  const decksGridRef = React.createRef();\n  const cardsGridRef = React.createRef();  \n\n  const cardSelectorRef = useRef();  \n  const playerGridRef = useRef();\n  const enemyGridRef = useRef();\n\n  const [isEnemyGridHidden, setIsEnemyGridHidden] = useState(false);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n  const cornerStyle = {\n    width: 0, \n    height: 0, \n    borderTop: '100px solid rgb(42,221,119)', \n    borderLeft: '100px solid transparent',\n    position: 'absolute',\n    top: 0,\n    right: 0\n  }\n\n  const getProperDate = (date) => {\n    return String(date).length >= 2 ? date : '0' + String(date);\n  }\n\n  useEffect(() => {\n    axios.get('http://ip-api.com/json').then(res => {      \n      const currentTime = new Date();\n      const year = String(currentTime.getFullYear());\n      const month = months[currentTime.getMonth()];\n      const day = getProperDate(currentTime.getDate());\n\n      let count = 0;\n      let countCountry = 0;\n      let currentCity = res.data.city;\n\n      firebaseDatabase.ref().child(year).child(month).child(day).child('visited_times').get().then((snapshot) => {\n        if (snapshot.exists()) {\n          count = snapshot.val() + 1;          \n        } else {\n          count = 1;\n        }\n\n        const newEntry = firebaseDatabase.ref().child(year).child(month).child(day).child('entries').push();\n\n        newEntry.set(res.data.city + ', ' + res.data.country + ', ' + res.data.countryCode + ', ' + currentTime.toLocaleTimeString());\n\n        firebaseDatabase.ref(year +'/' + month + '/' + day).update({\n          visited_times: count        \n        });\n        \n      });  \n\n      firebaseDatabase.ref().child('countries').child(res.data.country).child('visited_times').get().then((snapshot) => {\n        if (snapshot.exists()) {\n          countCountry = parseInt(snapshot.val()) + 1;\n        } else {\n          countCountry = 1;\n        }\n\n        firebaseDatabase.ref().child('countries').child(res.data.country).child('cities').get().then((snapshot) => {\n          if (snapshot.exists()) {\n            if (snapshot.val().search(currentCity) === -1) {\n              let aux = snapshot.val();\n              aux += ', ' + currentCity;\n              currentCity = aux;\n            } else {\n              currentCity = snapshot.val();\n            }\n          }\n\n          firebaseDatabase.ref('countries').child(res.data.country).set({\n            visited_times: countCountry,\n            cities: currentCity,\n            country_code: res.data.countryCode\n          });\n          \n        });\n\n      });\n      \n    }\n    )\n  }, []);\n\n  const collapseEnemyGrid = () => {\n    enemyGridRef.current.style.width = '0%';\n    cardsGridRef.current.style.width = '58%';\n    decksGridRef.current.style.width = '38%';\n    setIsEnemyGridHidden(true);    \n  }\n\n  const showEnemyGrid = () => {\n    enemyGridRef.current.style.width = '26%';\n    cardsGridRef.current.style.width = '44%';\n    decksGridRef.current.style.width = '26%';\n    setIsEnemyGridHidden(false);    \n  }\n\n  const enemyGrid = () => {\n    return (            \n          <div>\n          </div>\n        );\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"row\">\n        <div className=\"section sides left\">\n          <PlayerGrid ref={playerGridRef} cardSelectorRef={cardSelectorRef} />\n        </div>\n        <div ref={cardsGridRef} className=\"section middle\">\n          <div style={{textAlign: 'center'}}>\n            <img style={{width: '50%'}} src={appLogo} />\n          </div>\n          <CardSelector ref={cardSelectorRef} playerGridRef={playerGridRef} />\n          <PlayerSelector cardSelectorRef={cardSelectorRef} playerGridRef={playerGridRef} enemyGridRef={enemyGridRef} />\n          <p style={{textAlign: 'center', fontSize: '13px', color: '#555', margin: '4px 4px 90px 4px'}}>\n            Programmed with 💖 by <a href=\"https://twitter.com/carlospazuzu\" target=\"_blank\">@carlospazuzu</a>. <br /> \n            Compliments and Bug reports are appreciated.<br /> \n            Learn how to use here: <a href=\"https://bit.ly/6GYh8Jn\" target=\"_blank\" style={{color: '#d6457e'}}>https://bit.ly/6GYh8Jn</a> <br />\n            If you find this tool useful, please consider <br />    \n            <a href=\"https://www.buymeacoffee.com/carlospazuzu\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\" alt=\"Buy Me A Coffee\" style={{height: '60px !important', width: '200px !important'}} /></a>                    \n          </p>\n        </div>\n        <div className=\"section sides\">\n          <EnemyGrid ref={enemyGridRef} cardSelectorRef={cardSelectorRef} />\n        </div>\n        { /* !isEnemyGridHidden ? '' : <div style={cornerStyle} onClick={showEnemyGrid}></div> */ }  \n      </div>\n    </div>\n  );\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}