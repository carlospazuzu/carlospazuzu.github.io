{"ast":null,"code":"var _jsxFileName = \"/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerDeckCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport cards from '../utils/card-data.js';\nimport emptyCard from '../img/empty-card.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerDeckCard = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [currentMode, setCurrentMode] = useState('player');\n  useImperativeHandle(ref, () => ({\n    changeCurrentMode: newMode => {\n      setCurrentMode(newMode);\n    }\n  }));\n\n  const getCardImg = cardPosition => {\n    return cards['items'][cardPosition]['iconUrls']['medium'];\n  };\n\n  const getRandomCard = () => {\n    return Math.floor(Math.random() * 102);\n  };\n\n  const removeCard = () => {\n    if (currentMode === 'enemy') return;\n    props.funcUtils.removeCardFromDeck(props.position);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: removeCard,\n    style: {\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: '20%',\n        display: 'inline-block'\n      },\n      src: props.position !== -1 ? getCardImg(props.position) : emptyCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}, \"SRGfE/yDvotRqJyqGQmYQlp4z/8=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = PlayerDeckCard;\nexport default PlayerDeckCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayerDeckCard$forwardRef\");\n$RefreshReg$(_c2, \"PlayerDeckCard\");","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerDeckCard.js"],"names":["React","useState","forwardRef","useImperativeHandle","cards","emptyCard","PlayerDeckCard","props","ref","isEmpty","setIsEmpty","currentMode","setCurrentMode","changeCurrentMode","newMode","getCardImg","cardPosition","getRandomCard","Math","floor","random","removeCard","funcUtils","removeCardFromDeck","position","cursor","width","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,mBAAtC,QAAiE,OAAjE;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,cAAc,gBAAGJ,UAAU,SAAC,CAACK,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAEjD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,QAAD,CAA9C;AAEAE,EAAAA,mBAAmB,CAACK,GAAD,EAAM,OAAO;AAC/BK,IAAAA,iBAAiB,EAAGC,OAAD,IAAa;AAC/BF,MAAAA,cAAc,CAACE,OAAD,CAAd;AACA;AAH8B,GAAP,CAAN,CAAnB;;AAMA,QAAMC,UAAU,GAAIC,YAAD,IAAkB;AACpC,WAAOZ,KAAK,CAAC,OAAD,CAAL,CAAeY,YAAf,EAA6B,UAA7B,EAAyC,QAAzC,CAAP;AACA,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC3B,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAP;AACA,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACxB,QAAIV,WAAW,KAAK,OAApB,EAA6B;AAE7BJ,IAAAA,KAAK,CAACe,SAAN,CAAgBC,kBAAhB,CAAmChB,KAAK,CAACiB,QAAzC;AACA,GAJD;;AAMA,sBACC;AAAM,IAAA,OAAO,EAAEH,UAAf;AAA2B,IAAA,KAAK,EAAE;AAACI,MAAAA,MAAM,EAAE;AAAT,KAAlC;AAAA,2BACC;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAZ;AAAqD,MAAA,GAAG,EAAEpB,KAAK,CAACiB,QAAN,KAAmB,CAAC,CAApB,GAAwBT,UAAU,CAACR,KAAK,CAACiB,QAAP,CAAlC,GAAqDnB;AAA/G;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CA/BgC;AAAA,UAKhCF,mBALgC;AAAA,GAAjC;MAAMG,c;AAiCN,eAAeA,cAAf","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from 'react';\n\nimport cards from '../utils/card-data.js';\n\nimport emptyCard from '../img/empty-card.png';\n\nconst PlayerDeckCard = forwardRef((props, ref) => {\n\n\tconst [isEmpty, setIsEmpty] = useState(true);\n\tconst [currentMode, setCurrentMode] = useState('player');\n\n\tuseImperativeHandle(ref, () => ({\n\t\tchangeCurrentMode: (newMode) => {\n\t\t\tsetCurrentMode(newMode);\n\t\t}\n\t}));\n\n\tconst getCardImg = (cardPosition) => {\t\t\n\t\treturn cards['items'][cardPosition]['iconUrls']['medium'];\n\t}\n\n\tconst getRandomCard = () => {\n\t\treturn Math.floor(Math.random() * 102);\n\t}\n\n\tconst removeCard = () => {\n\t\tif (currentMode === 'enemy') return;\n\t\t\n\t\tprops.funcUtils.removeCardFromDeck(props.position)\n\t}\n\n\treturn(\n\t\t<span onClick={removeCard} style={{cursor: 'pointer'}}>\t\t\t\n\t\t\t<img style={{width: '20%', display: 'inline-block'}} src={props.position !== -1 ? getCardImg(props.position) : emptyCard} />\n\t\t</span>\n\t);\n\n});\n\nexport default PlayerDeckCard;"]},"metadata":{},"sourceType":"module"}