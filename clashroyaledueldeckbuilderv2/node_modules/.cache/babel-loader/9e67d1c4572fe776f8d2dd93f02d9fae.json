{"ast":null,"code":"var _jsxFileName = \"/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport PlayerDeckCard from './playerDeckCard.js';\nimport deleteIcon from '../img/delete-icon.png';\nimport deleteButton from '../img/delete-button.png';\nimport copyIcon from '../img/copy-icon.png';\nimport copyButton from '../img/copy-button.png';\nimport elixirImg from '../img/elixir.png';\nimport elixirCycleImg from '../img/elixir-cycle.png';\nimport cycleImg from '../img/cycle.png';\nimport cards from '../utils/card-data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerDeck = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [currentMode, setCurrentMode] = useState('player');\n  const baseArray = [0, 1, 2, 3, 4, 5, 6, 7];\n  const [deckCards, setDeckCards] = useState([-1, -1, -1, -1, -1, -1, -1, -1]);\n  const [hasChampion, setHasChampion] = useState(false);\n  const championIds = [26000069, 26000072, 26000074];\n  const playerCardRefArray = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef()];\n  useImperativeHandle(ref, () => ({\n    changeCurrentMode: newMode => {\n      setCurrentMode(newMode);\n\n      for (let i = 0; i < playerCardRefArray.length; i++) {\n        playerCardRefArray[i].current.changeCurrentMode(newMode);\n      }\n    },\n    isChampion: cardNum => {\n      return championIds.indexOf(cards[cardNum]['id']) !== -1;\n    },\n    addCardToDeck: cardNum => {\n      let availablePosition = deckCards.indexOf(-1);\n      if (hasChampion == true) return false;\n\n      if (availablePosition !== -1) {\n        deckCards[availablePosition] = cardNum;\n        setDeckCards([...deckCards]);\n        if (this.isChampion(cardNum)) this.setHasChampion(true);\n        return true;\n      }\n\n      return false;\n    },\n    isDeckFull: () => {\n      return deckCards.every(element => element !== -1);\n    }\n  }));\n\n  const removeCardFromDeck = cardNum => {\n    let cardPosition = deckCards.indexOf(cardNum);\n    if (cardPosition === -1) return; // deckCards.splice(cardPosition, 1);\n\n    if (this.isChampion(cardNum)) this.setHasChampion(false);\n    deckCards[cardPosition] = -1;\n    setDeckCards([...deckCards]);\n    props.funcUtils.removeFromDeckAndMakeAvailable(cardNum);\n  };\n\n  const getDeckCostArray = () => {\n    let deckCostArray = [];\n\n    for (let i = 0; i < deckCards.length; i++) {\n      deckCostArray.push(cards['items'][deckCards[i]]['cost']);\n    }\n\n    return deckCostArray;\n  };\n\n  const getDeckCardsIDArray = () => {\n    let deckCardsIDArray = [];\n\n    for (let i = 0; i < deckCards.length; i++) {\n      deckCardsIDArray.push(cards['items'][deckCards[i]]['id']);\n    }\n\n    return deckCardsIDArray;\n  };\n\n  const isDeckFull = () => {\n    return deckCards.every(element => element !== -1);\n  };\n\n  const getDeckAvgElixir = () => {\n    let deckCostArray = getDeckCostArray();\n\n    const reducer = (acc, cur) => acc + cur;\n\n    let result = deckCostArray.reduce(reducer);\n    return (result / 8).toFixed(1);\n  };\n\n  const getCycleCost = () => {\n    let deckCostArray = getDeckCostArray();\n    deckCostArray = deckCostArray.sort();\n    return (deckCostArray[0] + deckCostArray[1] + deckCostArray[2] + deckCostArray[3]).toFixed(1);\n  };\n\n  const openOfficialDeckLink = () => {\n    let deckCardsIDArray = getDeckCardsIDArray();\n    let officialLink = 'https://link.clashroyale.com/deck/en?deck=';\n    deckCardsIDArray.map((cardId, idx) => officialLink += (idx !== 0 ? ';' : '') + cardId);\n    window.open(officialLink);\n  };\n\n  const deleteDeck = () => {\n    if (currentMode === 'enemy') return;\n    deckCards.map(cardNum => props.funcUtils.removeFromDeckAndMakeAvailable(cardNum));\n    setDeckCards([-1, -1, -1, -1, -1, -1, -1, -1]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#79D9E3',\n      height: '168px',\n      margin: '15px',\n      padding: '10px',\n      textAlign: 'center'\n    },\n    className: \"row roundSquare\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eleven columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [0, 1, 2, 3].map(e => /*#__PURE__*/_jsxDEV(PlayerDeckCard, {\n            ref: playerCardRefArray[e],\n            position: deckCards[e],\n            funcUtils: {\n              'removeCardFromDeck': removeCardFromDeck\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [4, 5, 6, 7].map(e => /*#__PURE__*/_jsxDEV(PlayerDeckCard, {\n            ref: playerCardRefArray[e],\n            position: deckCards[e],\n            funcUtils: {\n              'removeCardFromDeck': removeCardFromDeck\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"one column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            'cursor': 'pointer',\n            height: '72px',\n            marginBottom: '1px',\n            marginLeft: '-30px'\n          },\n          onClick: isDeckFull() ? openOfficialDeckLink : null,\n          children: [\"      \", /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              marginTop: '15px',\n              width: '100%',\n              filter: isDeckFull() ? '' : 'grayscale(1.0)'\n            },\n            src: copyButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 174\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            'cursor': 'pointer',\n            marginTop: '11px',\n            marginLeft: '-30px'\n          },\n          onClick: isDeckFull() ? deleteDeck : null,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '100%',\n              filter: !isDeckFull() || currentMode === 'enemy' ? 'grayscale(1.0)' : ''\n            },\n            src: deleteButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eleven columns\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"four columns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"four columns\",\n            style: {\n              backgroundColor: '#3cd',\n              borderRadius: '20px',\n              marginLeft: '50px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                float: 'right',\n                fontFamily: 'Arial Black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: elixirImg,\n                style: {\n                  width: '25%',\n                  float: 'right'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#3E7ADE',\n                  float: 'right'\n                },\n                children: [\" \", isDeckFull() ? getDeckAvgElixir() : '??', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"four columns\",\n            style: {\n              backgroundColor: '#3cd',\n              borderRadius: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                float: 'right',\n                fontFamily: 'Arial Black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: elixirCycleImg,\n                style: {\n                  width: '30%',\n                  float: 'left'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#3E7ADE',\n                  float: 'left',\n                  marginLeft: '6px'\n                },\n                children: [\" \", isDeckFull() ? getCycleCost() : '??', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"one column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this);\n}, \"YX57GoKgYYrDmBVpigDa9gTX0Bk=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = PlayerDeck;\nexport default PlayerDeck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayerDeck$forwardRef\");\n$RefreshReg$(_c2, \"PlayerDeck\");","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerDeck.js"],"names":["React","useState","useRef","forwardRef","useImperativeHandle","PlayerDeckCard","deleteIcon","deleteButton","copyIcon","copyButton","elixirImg","elixirCycleImg","cycleImg","cards","PlayerDeck","props","ref","currentMode","setCurrentMode","baseArray","deckCards","setDeckCards","hasChampion","setHasChampion","championIds","playerCardRefArray","changeCurrentMode","newMode","i","length","current","isChampion","cardNum","indexOf","addCardToDeck","availablePosition","isDeckFull","every","element","removeCardFromDeck","cardPosition","funcUtils","removeFromDeckAndMakeAvailable","getDeckCostArray","deckCostArray","push","getDeckCardsIDArray","deckCardsIDArray","getDeckAvgElixir","reducer","acc","cur","result","reduce","toFixed","getCycleCost","sort","openOfficialDeckLink","officialLink","map","cardId","idx","window","open","deleteDeck","backgroundColor","height","margin","padding","textAlign","e","marginBottom","marginLeft","marginTop","width","filter","borderRadius","float","fontFamily","color"],"mappings":"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","sourcesContent":["import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\n\nimport PlayerDeckCard from './playerDeckCard.js';\n\nimport deleteIcon from '../img/delete-icon.png';\nimport deleteButton from '../img/delete-button.png';\nimport copyIcon from '../img/copy-icon.png';\nimport copyButton from '../img/copy-button.png';\nimport elixirImg from '../img/elixir.png';\nimport elixirCycleImg from '../img/elixir-cycle.png';\nimport cycleImg from '../img/cycle.png';\n\nimport cards from '../utils/card-data.js';\n\nconst PlayerDeck = forwardRef((props, ref) => {\n\n\tconst [currentMode, setCurrentMode] = useState('player');\n\n\tconst baseArray = [0, 1, 2, 3, 4, 5, 6, 7];\t\n\tconst [deckCards, setDeckCards] = useState([-1, -1, -1, -1, -1, -1, -1, -1]);\n\tconst [hasChampion, setHasChampion] = useState(false);\n\tconst championIds = [26000069, 26000072, 26000074];\n\n\tconst playerCardRefArray = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef()];\n\n\tuseImperativeHandle(ref, () => ({\n\t\tchangeCurrentMode: (newMode) => {\n\t\t\tsetCurrentMode(newMode);\n\t\t\tfor (let i = 0; i < playerCardRefArray.length; i ++) {\n\t\t\t\tplayerCardRefArray[i].current.changeCurrentMode(newMode);\n\t\t\t}\t\t\t\n\t\t},\n\n\t\tisChampion: (cardNum) => {\n\t\t\treturn championIds.indexOf(cards[cardNum]['id']) !== -1;\n\t\t},\n\n\t\taddCardToDeck: (cardNum) => {\n\t\t\tlet availablePosition = deckCards.indexOf(-1);\n\n\t\t\tif (hasChampion == true) return false;\n\n\t\t\tif (availablePosition !== -1) {\n\t\t\t\tdeckCards[availablePosition] = cardNum;\n\t\t\t\tsetDeckCards([...deckCards]);\n\t\t\t\tif (this.isChampion(cardNum)) this.setHasChampion(true);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\tisDeckFull: () => {\t\t\n\n\t\t\treturn deckCards.every(element => element !== -1);\n\t\t}\n\t\t\n\t}));\n\n\tconst removeCardFromDeck = (cardNum) => {\n\t\tlet cardPosition = deckCards.indexOf(cardNum);\n\n\t\tif (cardPosition === -1) return;\n\n\t\t// deckCards.splice(cardPosition, 1);\n\t\tif (this.isChampion(cardNum)) this.setHasChampion(false);\n\t\tdeckCards[cardPosition] = -1;\t\t\n\t\tsetDeckCards([...deckCards]);\n\t\tprops.funcUtils.removeFromDeckAndMakeAvailable(cardNum);\n\t}\n\n\tconst getDeckCostArray = () => {\n\n\t\tlet deckCostArray = [];\n\t\tfor (let i = 0; i < deckCards.length; i ++) {\n\t\t\tdeckCostArray.push(cards['items'][deckCards[i]]['cost'])\n\t\t}\n\n\t\treturn deckCostArray;\n\t}\n\n\tconst getDeckCardsIDArray = () => {\n\n\t\tlet deckCardsIDArray = [];\n\t\tfor (let i = 0; i < deckCards.length; i ++) {\n\t\t\tdeckCardsIDArray.push(cards['items'][deckCards[i]]['id'])\n\t\t}\n\n\t\treturn deckCardsIDArray;\n\t}\n\n\tconst isDeckFull = () => {\t\t\n\t\t\treturn deckCards.every(element => element !== -1);\n\t}\t\n\n\tconst getDeckAvgElixir = () => {\n\t\tlet deckCostArray = getDeckCostArray();\n\n\t\tconst reducer = (acc, cur) => acc + cur;\n\t\tlet result = deckCostArray.reduce(reducer);\n\n\t\treturn (result / 8).toFixed(1);\n\t}\n\n\tconst getCycleCost = () => {\n\t\tlet deckCostArray = getDeckCostArray();\n\n\t\tdeckCostArray = deckCostArray.sort();\n\n\t\treturn (deckCostArray[0] + deckCostArray[1] + deckCostArray[2] + deckCostArray[3]).toFixed(1);\n\t}\t\n\n\tconst openOfficialDeckLink = () => {\n\t\tlet deckCardsIDArray = getDeckCardsIDArray();\n\n\t\tlet officialLink = 'https://link.clashroyale.com/deck/en?deck='\n\n\t\tdeckCardsIDArray.map((cardId, idx) => officialLink += (idx !== 0 ? ';' : '') + cardId)\n\n\n\t\twindow.open(officialLink)\n\t}\n\n\tconst deleteDeck = () => {\n\t\tif (currentMode === 'enemy') return;\n\n\t\tdeckCards.map(cardNum => props.funcUtils.removeFromDeckAndMakeAvailable(cardNum))\n\t\tsetDeckCards([-1, -1, -1, -1, -1, -1, -1, -1]);\n\t}\n\n\treturn(\n\t\t<div style={{backgroundColor: '#79D9E3', height: '168px', margin: '15px', padding: '10px', textAlign: 'center'}} className=\"row roundSquare\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"eleven columns\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{ [0, 1, 2, 3].map(e => <PlayerDeckCard ref={playerCardRefArray[e]} position={deckCards[e]} funcUtils={{'removeCardFromDeck': removeCardFromDeck}}/>) }\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{ [4, 5, 6, 7].map(e => <PlayerDeckCard ref={playerCardRefArray[e]} position={deckCards[e]} funcUtils={{'removeCardFromDeck': removeCardFromDeck}}/>) }\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"one column\">\n\t\t\t\t\t<div className=\"row\" style={{'cursor': 'pointer', height: '72px', marginBottom: '1px', marginLeft: '-30px'}} onClick={isDeckFull() ? openOfficialDeckLink : null}>\t\t\t\t\t\t<img style={{marginTop: '15px', width: '100%', filter: isDeckFull() ? '' : 'grayscale(1.0)'}} src={copyButton} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\" style={{'cursor': 'pointer', marginTop: '11px', marginLeft: '-30px'}} onClick={isDeckFull() ? deleteDeck : null}>\n\t\t\t\t\t\t<img style={{width: '100%', filter: !isDeckFull() || currentMode === 'enemy' ? 'grayscale(1.0)' : ''}} src={deleteButton} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t</div>\t\t\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"eleven columns\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"four columns\" style={{backgroundColor: '#3cd', borderRadius: '20px', marginLeft: '50px'}}>\n\t\t\t\t\t\t\t<span style={{float: 'right', fontFamily: 'Arial Black'}}> \n\t\t\t\t\t\t\t\t<img src={elixirImg} style={{width: '25%', float: 'right'}}/> \n\t\t\t\t\t\t\t\t<span style={{color: '#3E7ADE', float: 'right'}}> { isDeckFull() ? getDeckAvgElixir() : '??'} </span> \n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"four columns\" style={{backgroundColor: '#3cd', borderRadius: '20px'}}>\n\t\t\t\t\t\t\t<span style={{float: 'right', fontFamily: 'Arial Black'}}> \n\t\t\t\t\t\t\t\t<img src={elixirCycleImg} style={{width: '30%', float: 'left'}}/> \n\t\t\t\t\t\t\t\t<span style={{color: '#3E7ADE', float: 'left', marginLeft: '6px'}}> { isDeckFull() ? getCycleCost() : '??'} </span> \n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"one column\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t</div>\n\t);\n});\n\nexport default PlayerDeck;"]},"metadata":{},"sourceType":"module"}