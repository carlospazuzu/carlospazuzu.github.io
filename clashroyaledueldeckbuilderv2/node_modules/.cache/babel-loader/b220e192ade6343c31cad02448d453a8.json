{"ast":null,"code":"import _slicedToArray from\"/home/pazuzu/Documents/prog/react/tcc-pazuzu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import blueCrownImage from'../img/blueCrown.png';import redCrownImage from'../img/redCrown.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PlayerSelector=function PlayerSelector(props){var _useState=useState('player'),_useState2=_slicedToArray(_useState,2),currentMode=_useState2[0],setCurrentMode=_useState2[1];var changeModeToPlayer=function changeModeToPlayer(){setCurrentMode('player');props.cardSelectorRef.current.changeCurrentMode('player');props.playerGridRef.current.changeCurrentMode('player');props.enemyGridRef.current.changeCurrentMode('player');};var changeModeToEnemy=function changeModeToEnemy(){setCurrentMode('enemy');props.cardSelectorRef.current.changeCurrentMode('enemy');props.playerGridRef.current.changeCurrentMode('enemy');props.enemyGridRef.current.changeCurrentMode('enemy');};return/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px'},className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{style:{cursor:'pointer',textAlign:'center',backgroundColor:'#3cd',borderRadius:'10px',filter:currentMode==='player'?'':'grayscale(1.0)'},className:\"six columns\",onClick:changeModeToPlayer,children:/*#__PURE__*/_jsx(\"img\",{style:{width:'20%'},src:blueCrownImage})}),/*#__PURE__*/_jsx(\"div\",{style:{cursor:'pointer',textAlign:'center',backgroundColor:'#d3454e',borderRadius:'10px',filter:currentMode==='enemy'?'':'grayscale(1.0)'},className:\"six columns\",onClick:changeModeToEnemy,children:/*#__PURE__*/_jsx(\"img\",{style:{width:'20%'},src:redCrownImage})})]});};export default PlayerSelector;","map":{"version":3,"sources":["/home/pazuzu/Documents/prog/react/tcc-pazuzu/src/components/playerSelector.js"],"names":["React","useState","blueCrownImage","redCrownImage","PlayerSelector","props","currentMode","setCurrentMode","changeModeToPlayer","cardSelectorRef","current","changeCurrentMode","playerGridRef","enemyGridRef","changeModeToEnemy","marginTop","cursor","textAlign","backgroundColor","borderRadius","filter","width"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,qBAA1B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,eAEKJ,QAAQ,CAAC,QAAD,CAFb,wCAE1BK,WAF0B,eAEbC,cAFa,eAIjC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAChCD,cAAc,CAAC,QAAD,CAAd,CACAF,KAAK,CAACI,eAAN,CAAsBC,OAAtB,CAA8BC,iBAA9B,CAAgD,QAAhD,EACAN,KAAK,CAACO,aAAN,CAAoBF,OAApB,CAA4BC,iBAA5B,CAA8C,QAA9C,EACAN,KAAK,CAACQ,YAAN,CAAmBH,OAAnB,CAA2BC,iBAA3B,CAA6C,QAA7C,EACA,CALD,CAOA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC/BP,cAAc,CAAC,OAAD,CAAd,CACAF,KAAK,CAACI,eAAN,CAAsBC,OAAtB,CAA8BC,iBAA9B,CAAgD,OAAhD,EACAN,KAAK,CAACO,aAAN,CAAoBF,OAApB,CAA4BC,iBAA5B,CAA8C,OAA9C,EACAN,KAAK,CAACQ,YAAN,CAAmBH,OAAnB,CAA2BC,iBAA3B,CAA6C,OAA7C,EACA,CALD,CAOA,mBACC,aAAK,KAAK,CAAE,CAACI,SAAS,CAAE,MAAZ,CAAZ,CAAiC,SAAS,CAAC,KAA3C,wBACC,YAAK,KAAK,CAAE,CAACC,MAAM,CAAE,SAAT,CAAoBC,SAAS,CAAE,QAA/B,CAAyCC,eAAe,CAAE,MAA1D,CAAkEC,YAAY,CAAE,MAAhF,CAAwFC,MAAM,CAAEd,WAAW,GAAK,QAAhB,CAA2B,EAA3B,CAAgC,gBAAhI,CAAZ,CAA+J,SAAS,CAAC,aAAzK,CAAuL,OAAO,CAAEE,kBAAhM,uBACC,YAAK,KAAK,CAAE,CAACa,KAAK,CAAE,KAAR,CAAZ,CAA4B,GAAG,CAAEnB,cAAjC,EADD,EADD,cAIC,YAAK,KAAK,CAAE,CAACc,MAAM,CAAE,SAAT,CAAoBC,SAAS,CAAE,QAA/B,CAAyCC,eAAe,CAAE,SAA1D,CAAqEC,YAAY,CAAE,MAAnF,CAA2FC,MAAM,CAAEd,WAAW,GAAK,OAAhB,CAA0B,EAA1B,CAA+B,gBAAlI,CAAZ,CAAiK,SAAS,CAAC,aAA3K,CAAyL,OAAO,CAAEQ,iBAAlM,uBACC,YAAK,KAAK,CAAE,CAACO,KAAK,CAAE,KAAR,CAAZ,CAA4B,GAAG,CAAElB,aAAjC,EADD,EAJD,GADD,CAUA,CA5BD,CA+BA,cAAeC,CAAAA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport blueCrownImage from '../img/blueCrown.png';\nimport redCrownImage from '../img/redCrown.png';\n\nconst PlayerSelector = (props) => {\n\n\tconst [currentMode, setCurrentMode] = useState('player');\n\n\tconst changeModeToPlayer = () => {\n\t\tsetCurrentMode('player');\n\t\tprops.cardSelectorRef.current.changeCurrentMode('player');\n\t\tprops.playerGridRef.current.changeCurrentMode('player');\n\t\tprops.enemyGridRef.current.changeCurrentMode('player');\n\t}\n\n\tconst changeModeToEnemy = () => {\n\t\tsetCurrentMode('enemy');\n\t\tprops.cardSelectorRef.current.changeCurrentMode('enemy');\n\t\tprops.playerGridRef.current.changeCurrentMode('enemy');\n\t\tprops.enemyGridRef.current.changeCurrentMode('enemy');\n\t}\n\n\treturn(\n\t\t<div style={{marginTop: '15px'}} className=\"row\">\t\t\t\n\t\t\t<div style={{cursor: 'pointer', textAlign: 'center', backgroundColor: '#3cd', borderRadius: '10px', filter: currentMode === 'player' ? '' : 'grayscale(1.0)'}} className=\"six columns\" onClick={changeModeToPlayer} >\n\t\t\t\t<img style={{width: '20%'}} src={blueCrownImage} />\n\t\t\t</div>\n\t\t\t<div style={{cursor: 'pointer', textAlign: 'center', backgroundColor: '#d3454e', borderRadius: '10px', filter: currentMode === 'enemy' ? '' : 'grayscale(1.0)'}} className=\"six columns\" onClick={changeModeToEnemy}>\n\t\t\t\t<img style={{width: '20%'}} src={redCrownImage} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default PlayerSelector;"]},"metadata":{},"sourceType":"module"}